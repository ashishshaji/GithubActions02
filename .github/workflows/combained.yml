name: Config File Workflow
on:
  push:
    branches:
      - test
jobs:
  generate-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate JSON file
        run: >
          echo '{ 
            "Repo1": { 
              "source_system": "Bitbucket", 
              "Bitbucket_Repo": "https://www.bitbucket-dummy.com/project1/repo1", 
              "Migration_story": "https://www.jira-dummy.com/project1/story1", 
              "Migration_wave": "wave1", 
              "Validate_Repo_Migration": "Y", 
              "Validate_Jenkins_Migration": "Y", 
              "Jenkins_Job": { 
                "Jenkins_Job_Path": "https://www.jenkins-dummy.com/project1", 
                "Jenkins_Job_Name": ["CI_Job1", "CI_Job2", "CI_Job3"] 
              } 
            }, 
            "App_Contact": { 
              "email": "ashish@gmail.com", 
              "phone": "555-555-5555" 
            } 
          }' > config.json
      - name: Display JSON file
        run: cat config.json
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: config-json
          path: config.json
  master-config:
    needs: generate-config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download JSON artifact
        uses: actions/download-artifact@v4
        with:
          name: config-json
          path: .
      - name: display JSON file
        run: cat config.json
      - name: Read JSON
        id: read_json
        run: >
          json_file="config.json"

          repo=$(cat $json_file | jq -r '.repo')

          source_system=$(jq -r '.Repo1.source_system' "$json_file") >> $GITHUB_ENV

          validate_jenkins_migration=$(jq -r '.Repo1.Validate_Jenkins_Migration' "$json_file") >> $GITHUB_ENV

          # echo "Repo: $repo"

          # echo "source_system=$source_system" >> $GITHUB_ENV

          # echo "validate_jenkins_migration=$validate_jenkins_migration" >> $GITHUB_ENV
      - name: execute bitbucket migration
        run: |
          echo $source_system
          if [ $source_system = "Bitbucket" ]; then
           echo "run bitbucket migration"
          fi
          echo "completed bitbucket migration"
      - name: execute jenkins migration
        run: |
          echo $validate_jenkins_migration
          if [ $validate_jenkins_migration = "Y" ]; then
           echo "run Jenkins migration"
          fi
          echo "completed Jenkins migration"     
