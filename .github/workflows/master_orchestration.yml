name: Config File Workflow
on:
  push:
    branches:
      - Final_test
jobs:
  generate-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate JSON file
        run: >
          echo '{ 
            "Repo1": { 
              "Source_System": "Bitbucket", 
              "Bitbucket_Repo": "https://www.bitbucket-dummy.com/project1/repo1", 
              "Migration_story": "https://www.jira-dummy.com/project1/story1", 
              "Migration_wave": "wave1", 
              "Validate_Repo_Migration": "Y", 
              "Validate_Jenkins_Migration": "Y", 
              "Jenkins_Job": { 
                "Jenkins_Job_Path": "https://www.jenkins-dummy.com/project1", 
                "Jenkins_Job_Name": ["CI_Job1", "CI_Job2", "CI_Job3"] 
              } 
            }, 
            "App_Contact": { 
              "email": "ashish@gmail.com", 
              "phone": "555-555-5555" 
            } 
          }' > config.json
      - name: Display JSON file
        run: cat config.json
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: config-json
          path: config.json
  master-config:
    needs: generate-config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download JSON artifact
        uses: actions/download-artifact@v4
        with:
          name: config-json
          path: .
      - name: display JSON file
        run: cat config.json

      - name: Read JSON and set environment variables
        run: |
          json_file="config.json"
          Source_System=$(jq -r '.Repo1.Source_System' "$json_file")
          echo "Source_System=$Source_System" >> $GITHUB_ENV

      - name: Run Bitbucket to GitHub
        if: env.Source_System == 'Bitbucket'
        run: |
            echo "running bb to gh migration"
  
      - name: Run ADO to GitHub migration
        if: env.Source_System == 'AzureDevops'
        run: |
         echo "running ado to gh migration"  

      - name: Run github to Github enterprise migration
        if: env.Source_System == 'Github'
        run: |
          echo "running gh to gh enterprise migration"  

      - name: Run Jenkins migration
        if: env.Validate_Jenkins_Migration == 'Y'
        run: |
            echo "running Jenkins migration"    
            
      - name: Print specific environment variables from JSON
        run: cat $GITHUB_ENV
